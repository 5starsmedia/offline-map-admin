server {
    set $ver "/offline-map-admin";
    set $baseRoot "/var/www";
    set $siteRoot $baseRoot$ver;

    listen 80;

    # dev
    #server_name ~^(www\.)?(?<domain>.+)\.ua2\.biz$;
    # prod
    server_name jew.5stars.link;

    # http://whomwah.com/2010/07/05/fixing-the-trailing-slash-in-nginx/
    server_name_in_redirect off;

    root $siteRoot;

    #Morfeus and other fucking bots:)
    if ($http_user_agent ~* "(Morfeus|larbin|ZmEu|Toata|talktalk)" ) {
        return 500;
    }
location = /index.html {
    return 301 $scheme://$host;
}
    #none www(retest, because no logs by www.)
    if ($host ~* "www\.(.*)") {
        set $none_www $1;
        rewrite ^(.*)$ $scheme://$none_www$1 permanent;
        }

    #deny php in static and uploads location
    if ($uri ~* ^/(uploads|static)/.*\.(php|php5|php4)$) {
        return 403;
    }

#    add_header Cache-Control "no-cache";

    client_max_body_size       100m;
    client_body_buffer_size    128k;

    index index.html;

    location /nodejs/ {
        internal;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://localhost:8080/;
        proxy_redirect off;

        client_max_body_size       100m;
        client_body_buffer_size    128k;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

#    location / {
#       #try_files /sites/$domain/prod/$uri @prerender;
#        try_files /sites/$domain/prod/$uri @prerender;

#        root /dev/null;
 #       error_page 404 = @prerender;

  #      try_files $uri @prerender;
  #  }

location ~ ([^/]*)sitemap(.*)\.x(m|s)l$ {
	rewrite ^/sitemap\.xml$ /api/sitemap last;
	access_log off;
}
location /socket.io/ {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
    location ~ /(.*) {
        try_files /build/$1 /build/index.html /sites/index.html;
    }

    location ~ /cabinet/(.*) {
        try_files /build/$1 /build/index.html /sites/index.html;
    }
    location ~ /admin/ {
        rewrite ^(.*)$ $scheme://$host/cabinet/ permanent;
    }
    location ~ ^/yandex_(.*).html$ {
        rewrite ^/yandex_(.*).html$ /api/sites/yandex?id=$1 last;
        access_log off;
    }
    location ~ ^/google(.*).html$ {
        rewrite ^/google(.*).html$ /api/sites/google?id=$1 last;
        access_log off;
    }

    location ~ ^/feed(.*).xml$ {
        rewrite ^/feed(.*).xml$ /api/posts/feed?id=$1 last;
        access_log off;
    }
    #location ~ \.html$ {
     #   root $siteRoot/sites/$domain/prod;
      #  try_files $uri @prerender;
#    }
    location ~ ^/uploads {
        try_files $uri @uploads;
    }
    location @uploads {
        root $siteRoot;
    }
    location /current.js {
        rewrite .* /api/sites/settings last;
        access_log off;
    }
    location /robots.txt {
        rewrite .* /api/sites/robots last;
        access_log off;
    }

    # nodejs proxy
    location /api {
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://localhost:8080/api;
        proxy_redirect off;

        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "upgrade";

        access_log off;
    }

    location @prerender {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_intercept_errors on;

        set $prerender 0;
       if ($http_user_agent ~* "googlebot|yahoo|bingbot|baiduspider|yandex|yeti|yodaobot|gigabot|ia_archiver|facebookexternalhit|twitterbot|vkshare|odklbot|developers\.google\.com") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_|prerender=1") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }

        if ($prerender = 1) {
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://127.0.0.1:3000;
        }
        if ($prerender = 0) {

   #         rewrite ^(.*)$ /nodejs$1 last;
   #         root $siteRoot;
    #        rewrite .* /sites/$domain/prod/index.html break;
        }
#	root $siteRoot;
#        try_files /sites/$domain/prod/$uri /sites/$domain/prod/index.html /sites/index.html;
    }
}